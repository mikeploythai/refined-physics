Code "Chargable Vanilla Spin Dash" by "mploythai"
//
  #include "ReflectionHelpers" noemit

  #lib "Sonic"
  #lib "SonicParameters"
  #lib "BlackboardItem"
  #lib "MathHelpers"

  static float chargeCount = 0f;
//
{
  var dashVelocity = Sonic.Kinematics.GetHorizontalMagnitude();
  var SonicParams = Reflection.GetDataInfo<SonicParameters.Root>("player_common");
  if (SonicParams.pData == null) return;

  if (Sonic.IsGrounded() && Sonic.State.GetCurrentStateID() == Sonic.StateID.StateSpinBoostCharge) {
    if (Sonic.Input.IsPressed(Sonic.PlayerActionType.PlayerSonicboom))
      chargeCount += 1f;
    
    dashVelocity = MathHelpers.Clamp((35f - (30f / 7f)) + (chargeCount * (30f / 7f)), 35f, 65f);
  } else if (!Sonic.IsGrounded()) {
    Sonic.Kinematics kinematics = Sonic.Kinematics.Get();
    if (kinematics == null) return;

    if (Sonic.State.GetCurrentStateID() == Sonic.StateID.StateSpinBoostCharge) {
      *kinematics.Velocity += Sonic.Kinematics.GetForward();
      chargeCount += 1f;
      dashVelocity = MathHelpers.Clamp(chargeCount / 1.25f, 35f, 65f);
    }
  } else if (Sonic.State.GetPreviousStateID() != Sonic.StateID.StateSpinBoostCharge && Sonic.State.GetCurrentStateID() != Sonic.StateID.StateSpinBoost) {
    dashVelocity = Sonic.Kinematics.GetHorizontalMagnitude();
    chargeCount = 0f;
  }

  RFL_SET_PARAM(SonicParams, forwardView.spinBoost.speedBoost.initialSpeed, dashVelocity);
  RFL_SET_PARAM(SonicParams, forwardView.spinBoost.speedBoost.maxSpeed, dashVelocity);
}
